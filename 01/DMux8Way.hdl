// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:

    Not(in = sel[2], out = nSel2);
    Not(in = sel[1], out = nSel1);

    And(a = nSel1, b = nSel2, out = fork1);
    And(a = sel[1], b = nSel2, out = fork2);
    And(a = sel[2], b = nSel1, out = fork3);
    And(a = sel[2], b = sel[1], out = fork4);

    And(a = fork1, b = in, out = fork1In);
    And(a = fork2, b = in, out = fork2In);
    And(a = fork3, b = in, out = fork3In);
    And(a = fork4, b = in, out = fork4In);

    DMux(in = fork1In, sel = sel[0], a = a, b = b);
    DMux(in = fork2In, sel = sel[0], a = c, b = d);
    DMux(in = fork3In, sel = sel[0], a = e, b = f);
    DMux(in = fork4In, sel = sel[0], a = g, b = h);

}
